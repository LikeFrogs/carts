pico-8 cartridge // http://www.pico-8.com
version 29
__lua__


function _init()
	--player
	player = {
		sprite = 1,
		x = 16,
		y = 48,
		w = 8,
		h = 8,

		dx = 0,
		dy = 0,

		flip = false,
		falling = false,

		animTime = 0,
	}

	--control variables
	gravity = 0.3
	movementAcceleration = 0.5
	jumpAcceleration = 4
	maxHorizontalSpeed = 3
	maxFallSpeed = 5
	maxJumpSpeed = -4

	--camera
	cam = {
		x = 0,
		y = 0,
	}
end

function _update()	
	processPlayerMovement()

	checkCollisions()

	animatePlayer()

	--apply accumulated acceleration
	player.x += player.dx
	player.y += player.dy

	cameraUpdate()
end

function processPlayerMovement()
	--user input
	if btn(0) then 
		player.dx -= movementAcceleration
		player.flip = true
	end
	if btn(1) then 
		player.dx += movementAcceleration
		player.flip = false
	end
	if btn(2) and not player.falling then 
		player.dy -= jumpAcceleration
	end
	if btn(3) and player.falling then 
		player.dy += jumpAcceleration
	end

	--apply gravity
	player.dy += gravity;

	--cap player speeds
	if player.dx > maxHorizontalSpeed then
		player.dx = maxHorizontalSpeed
	end
	if player.dx < -maxHorizontalSpeed then
		player.dx = -maxHorizontalSpeed
	end
	player.dy = mid(maxJumpSpeed, player.dy, maxFallSpeed)
end

function checkCollisions()
	if collideMap(player, "down", 0) and player.falling then
		player.dy = 0
		player.falling = false
		player.y-=((player.y+player.h+1)%8)-1
	else
		player.falling = true
	end
end

function animatePlayer()
	if btn(0) or btn(1) and not player.falling then
		if time() - player.animTime > .07 then
			player.animTime = time()
			player.sprite += 1
			if player.sprite == 3 then 
				player.sprite = 1
			end
		end
	elseif not player.falling then
		player.sprite = 1		
	end
end

function cameraUpdate()
	cam.x = player.x - 64 + (player.w / 2)
	camera(cam.x, cam.y)
end

function collideMap(obj, aim, flag)
	local x=obj.x  local y=obj.y
	local w=obj.w  local h=obj.h
   
	local x1=0	 local y1=0
	local x2=0  local y2=0
   
	if aim=="left" then
	  x1=x-1  y1=y
	  x2=x    y2=y+h-1   
	elseif aim=="right" then
	  x1=x+w-1    y1=y
	  x2=x+w  y2=y+h-1   
	elseif aim=="up" then
	  x1=x+2    y1=y-1
	  x2=x+w-3  y2=y   
	elseif aim=="down" then
	  x1=x+2      y1=y+h
	  x2=x+w-3    y2=y+h
	end
   
	--pixels to tiles
	x1/=8    y1/=8
	x2/=8    y2/=8
   
	if fget(mget(x1,y1), flag)
	or fget(mget(x1,y2), flag)
	or fget(mget(x2,y1), flag)
	or fget(mget(x2,y2), flag) then
	  return true
	else
	  return false
	end   
end

function _draw()
	cls()
	map(0,0)
	spr(player.sprite, player.x, player.y, 1, 1, player.flip)
end

__gfx__
00000000000a00a0000a00a088888888cccccccccc177ccccccccccccccccccc0000000000000000000000000000000000000000000000000000000000000000
0000000000a00a0000a00a0099999999cccccccc1777777ccccccccccccccccc0000000000000000000000000000000000000000000000000000000000000000
000000000a9999900a999990aaaaaaaacccccccc77777777ccccc17ccccccccc0000000000000000000000000000000000000000000000000000000000000000
007007000a9799700a979970bbbbbbbbcccccccc77777777cccc1777cccccccc0000000000000000000000000000000000000000000000000000000000000000
000770000a9999900a99999011111111cccccccc77777777ccccc17ccccccccc0000000000000000000000000000000000000000000000000000000000000000
0007700000aaaa0000aaaa0022222222cccccccc77777777cccccccccccccccc0000000000000000000000000000000000000000000000000000000000000000
0070070000aaaa0000aaaa00cccccccccccccccc11111111cccccccccccccccc0000000000000000000000000000000000000000000000000000000000000000
0000000000a00a000a0000a0cccccccccccccccccccccccc17cccccccccccccc0000000000000000000000000000000000000000000000000000000000000000
__gff__
0000000100010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
__map__
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0404040404040404040404040404040400000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0406040404040404040404040404060400000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0404040404040604040505050504040400000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0404040404040404040404040404040400000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0404040404040404040404040404040400000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0404040404050505040404040404040400000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0404040404040404040404040404040400000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0303030303030303030303030303030300000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
